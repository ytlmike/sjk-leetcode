kind: pipeline
type: docker
name: leetcoder-build

steps:
  - name: build
    image: registry-vpc.cn-qingdao.aliyuncs.com/ytlmike/php-composer-docker:7.3
    volumes:
      - name: cache
        path: /data/composer/
      - name: docker
        path: /var/run/docker.sock
    commands:
      - echo $MYSQL_HOST
      - composer install --no-dev --optimize-autoloader
      - rm -rf build
      - mkdir build
      - cp .env.example .env
      - echo "MYSQL_HOST=$MYSQL_HOST" >> .env
      - echo "MYSQL_USERNAME=MYSQL_USERNAME" >> .env
      - echo "MYSQL_PASSWORD=MYSQL_PASSWORD" >> .env
      - echo "REDIS_HOST=REDIS_HOST" >> .env
      - cat .env
      - cp -r app bootstrap config database resources public routes storage vendor deploy .env composer.json composer.lock build/
      - cp deploy/* ./
      - ls -al
      - docker build -t registry-vpc.cn-qingdao.aliyuncs.com/ytlmike/leetcoder .
      - docker login --username=$ALI_USERNAME registry-vpc.cn-qingdao.aliyuncs.com/ytlmike/leetcoder -p $ALI_PASSWORD
      - docker push registry-vpc.cn-qingdao.aliyuncs.com/ytlmike/leetcoder
    environment:
      REDIS_HOST:
        from_secret: REDIS_HOST
      MYSQL_HOST:
        from_secret: MYSQL_HOST
      MYSQL_USERNAME:
        from_secret: MYSQL_USERNAME
      MYSQL_PASSWORD:
        from_secret: MYSQL_PASSWORD
      ALI_USERNAME:
        from_secret: ALI_USERNAME
      ALI_PASSWORD:
        from_secret: ALI_PASSWORD
node:
  type: builder

volumes:
  - name: cache
    host:
      path: /data/composer/
  - name: docker
    host:
      path: /var/run/docker.sock

trigger:
  branch:
    - master

---
kind: pipeline
type: docker
name: leetcoder-deploy

steps:
  - name: deploy
    image: registry-vpc.cn-qingdao.aliyuncs.com/ytlmike/docker-compose
    volumes:
      - name: docker
        path: /var/run/docker.sock
    commands:
      - ls
#      - docker-compose up -d

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

trigger:
  branch:
    - master
